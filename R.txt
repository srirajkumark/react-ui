

Components:
-> class based (legacy)
-> function based (new) 16.0 ++



<div className="App">
   <h2>Welcome to App Component</h2>
</div>

React own templating language -> 99% html -> 1% diff

Diff:
1. class -> classname
2. every tag must contains a closing tag.

React JS Props & State:-
======================

Props -> Transfer data from one component to another component.

<img src="">

State -> The data itself can be maintained by the component.


React JS Expression -> {}

React Hooks
------------
=> a special function of a component

-> useState()

let [state, setState] = useState({
   .....
});

let student = {name : 'John', course : 'BTech'};

Bootstrap Installations:
npm install bootstrap@5.3.3
-> .css , .js

font-Awesome icons:
npm i font-awesome
https://use.fontawesome.com/releases/v6.5.2/css/all.css
-> .css 

google fonts:
Ubuntu font


Authentication server

list app json url:
https://gist.githubusercontent.com/thenaveensaggam/fe5a67531d964f8c17fc92f0c70ced21/raw/f7c43379ec32421c871a57f832e314dd8e5d92f7/contacts.15.6.2021.json


componentDidMount() -> rendered on DOM
componentWillUpdate() -> updates
componentWillUnmount() -> removes comp from DOM

hooks:

useState()
useEffect()

useEffect(() => {
   //componentDidMount() //server connection logic
   return () => {
      //componentWillUnmount()
   }
},[]);


Axios library => http library
---------------------
npm install axios 

When using useEffect we should not write Async function directly in main function 
As useEffect should not return a promise, you need to define the async function inside the useEffect and call it immediately.
Contact App Using Http Axios 
Changes Made in User List:
Moved the async function inside useEffect: The fetchData async function is defined inside the useEffect hook and called immediately after its definition.
Removed async from useEffect callback: The useEffect callback is no longer async, preventing the issue where useEffect would return a promise.
This ensures the useEffect hook remains synchronous and functions correctly.


React Routing & Navigation
--------------------------
npm install react-router-dom

/users -> users page
/admin -> admin page 
/login -> login page 

In this project for routing :
/                 -> home page
/employees/list   -> employees list page
/about            -> about page 
/users/login      -> login page 
/users/register   -> register page 


New way to use router:
Open up your terminal and bootstrap a new React app with Vite:

npm create vite@latest name-of-your-project -- --template react
# follow prompts
cd <your new project directory>
npm install react-router-dom # always need this!
npm install localforage match-sorter sort-by # only for this tutorial.
npm run dev

React Contact Manager Application:
To setup a phone directory.